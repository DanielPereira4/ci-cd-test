name: Build and Deploy to Sandbox (CloudHub EU1)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8

    - name: Build with Maven (Package Phase)
      run: mvn clean package -Pcloudhub-deploy

    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.zip | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(echo $artifactName1 | sed "s/.zip/-$commitHash.zip/g")
        mv $artifactName1 $artifactName2

    - name: Upload Mule App Artifact
      uses: actions/upload-artifact@v4
      with:
        name: mule-artifacts
        path: target/*.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Download Mule App Artifact
      uses: actions/download-artifact@v4
      with:
        name: mule-artifacts
        path: target/

    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8

    - name: Deploy to CloudHub EU1
      env:
        ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
        ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
        ANYPOINT_ENV: ${{ secrets.ANYPOINT_ENV }}
      run: |
        mvn deploy -Pcloudhub-deploy
